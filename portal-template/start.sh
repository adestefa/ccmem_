#!/bin/bash

# CCMem Portal Start Script
# Auto-generated by install-portal.sh

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CONFIG_FILE="$SCRIPT_DIR/config.json"
PID_FILE="$SCRIPT_DIR/portal.pid"

echo "🚀 Starting CCMem Portal..."
echo "📍 Portal Directory: $SCRIPT_DIR"

# Check if config exists
if [ ! -f "$CONFIG_FILE" ]; then
    echo "❌ Error: config.json not found"
    echo "💡 Run install-portal.sh to set up this portal"
    exit 1
fi

# Extract project info from config
PROJECT_NAME=$(node -p "JSON.parse(require('fs').readFileSync('$CONFIG_FILE', 'utf8')).project.name")
PROJECT_DISPLAY_NAME=$(node -p "JSON.parse(require('fs').readFileSync('$CONFIG_FILE', 'utf8')).project.displayName")
SERVER_PORT=$(node -p "JSON.parse(require('fs').readFileSync('$CONFIG_FILE', 'utf8')).server.port")
BASE_PATH=$(node -p "JSON.parse(require('fs').readFileSync('$CONFIG_FILE', 'utf8')).server.basePath")

echo "🎯 Project: $PROJECT_DISPLAY_NAME ($PROJECT_NAME)"
echo "🔌 Port: $SERVER_PORT"
echo "🌐 Path: $BASE_PATH"

# Check if already running
if [ -f "$PID_FILE" ]; then
    OLD_PID=$(cat "$PID_FILE")
    if kill -0 "$OLD_PID" 2>/dev/null; then
        echo "⚠️  Portal already running (PID: $OLD_PID)"
        echo "🌐 Dashboard: http://localhost:$SERVER_PORT$BASE_PATH"
        exit 0
    else
        echo "🧹 Cleaning up stale PID file"
        rm -f "$PID_FILE"
    fi
fi

# Check for port conflicts
if lsof -i :$SERVER_PORT >/dev/null 2>&1; then
    echo "❌ Error: Port $SERVER_PORT is already in use"
    echo "💡 Run ./stop.sh first or choose a different port in config.json"
    exit 1
fi

# Start the server
echo "▶️  Starting portal server..."
cd "$SCRIPT_DIR"

# Start server in background and capture PID
node server.js &
SERVER_PID=$!

# Save PID for stop script
echo $SERVER_PID > "$PID_FILE"

# Wait a moment and check if server started successfully
sleep 2
if kill -0 "$SERVER_PID" 2>/dev/null; then
    echo "✅ CCMem Portal started successfully!"
    echo "🆔 Process ID: $SERVER_PID"
    echo "🌐 Dashboard: http://localhost:$SERVER_PORT$BASE_PATH"
    echo "📊 Health Check: http://localhost:$SERVER_PORT$BASE_PATH/api/health"
    echo ""
    echo "📝 To stop the portal:"
    echo "   ./stop.sh"
    echo ""
    echo "📋 To view logs:"
    echo "   tail -f portal.log"
else
    echo "❌ Failed to start portal server"
    rm -f "$PID_FILE"
    exit 1
fi